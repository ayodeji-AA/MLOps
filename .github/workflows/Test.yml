name: Test

# Manual trigger with parameters

on:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      # This is the path of your notebooks in Git.  Currently, this is not recursively deploying notebooks
      GIT_NOTEBOOK_PATH:
        description: 'Notebooks Relative Path in Git'
        required: true
        default: 'notebooks'

      # This is where in your Databricks workspace your notebooks will be deployed
      # Typically this is under a Folder under the Workspace and not under a specific user's folder
      NOTEBOOK_DEPLOYMENT_PATH:
        description: 'Notebooks Deployment Path to Databricks'
        required: true
        default: '/MLOps'

#       # This resource group for the Databricks workspace and KeyVault
      RESOURCE_GROUP:
        description: 'Resource Group Name'
        required: true
        default: 'Databricks-MLOps'

      # The Azure region to which to deploy your resources
      LOCATION:
        description: 'Azure Region'
        required: true
        default: 'North Europe'

      # This is the name of your Azure Databricks resource
      WORKSPACE_NAME:
        description: 'Databricks workspace name'
        required: true
        default: 'Databricks-MLOps'

      # This is a KeyVault for holding the Service Principal to make Databricks API calls and to hold Databricks KeyVault backed Secrets
      KEY_VAULT_NAME:
        description: 'KeyVault name'
        required: true
        default: 'KeyVault-MLOps'

      # This is a KeyVault for holding the Service Principal to make Databricks API calls and to hold Databricks KeyVault backed Secrets
      SUBSCRIPTION_ID:
        description: 'Azure Subscription Id'
        required: true
        default: '1cdb1b2b-10a7-4766-968e-2b5fc024df2e'

      # Inialize the system
      # Note: We only want to run the KeyVault ARM template once.  If you keep re-running, then you will OVERWRITE your values
      MODE:
        description: 'Deployment Mode (Databricks or Initialize-KeyVault)'
        required: true
        default: 'Databricks'

jobs:
  #############################################################
  # Builds the code
  # Currently this is not building and JAR files, but you would do that here
  # This is packaging up the files from Git to the Artifacts files
  #############################################################
  Build:
    runs-on: ubuntu-latest

    # Checkout code
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Show the environment variables for debugging
    - name: Display Environment Variable
      uses: azure/powershell@v1
      with:
        inlineScript: |
          dir env:
        azPSVersion: '3.1.0'                               

    # Deploy your Databricks Init Scripts to dbfa:/init-scripts folder on DBFS
    - name:  Deploy your Databricks Init Scripts to dbfa:/init-scripts folder on DBFS
      #if: ${{ github.event.inputs.MODE == 'Databricks' }}
      run: |
        cd "${GITHUB_WORKSPACE}/init-scripts"
        chmod +x ${GITHUB_WORKSPACE}/deployment-scripts/deploy-notebooks.sh
        ${GITHUB_WORKSPACE}/deployment-scripts/deploy-init-scripts.sh "${{ steps.databricksSecretAction.outputs.databricks-dev-ops-tenant-id }}" "${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-id }}" "${{ steps.databricksSecretAction.outputs.databricks-dev-ops-client-secret }}" "${{ steps.databricksSecretAction.outputs.databricks-dev-ops-subscription-id }}" "${{ env.resourceGroupName }}" "${{ env.databricksWorkspaceName }}"

